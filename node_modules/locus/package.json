{
  "name": "locus",
  "version": "0.1.0",
  "description": "Line focuser",
  "main": "lib/locus.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/alidavut/locus.git"
  },
  "dependencies": {
    "sync-prompt": "~0.2.2"
  },
  "devDependencies": {
    "matchdep": "~0.1.2",
    "grunt": "~0.4.1",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-contrib-watch": "~0.5.3"
  },
  "keywords": [
    "debugger",
    "line",
    "injection"
  ],
  "author": {
    "name": "Ali Davut"
  },
  "license": "BSD-2-Clause",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/alidavut/locus/issues"
  },
  "readme": "LOCUS\n=====\n\nLocus is a line injection module for node.js.\n\nIt allows to open a REPL during your program execution, with access to all variables.\n\n\n## Installing\n\n```\nnpm install locus\n```\n\n## Using\nTo load locus globally add this line of code in any file of the project: ``` require('locus') ```\n\nNote: Loading in development environments is recommended.\n\nThen use this command in any line: ``` eval(locus) ```\n\nTo leave locus just type ``` quit ```\n\n### Example session\n\nCode : `test.js`\n\n```javascript\n'use strict';\n\nrequire('locus');\n\nconsole.log('Hello world !');\n\nvar foo = 'bar';\nconsole.log(\"foo is :\", foo);\neval(locus);\nconsole.log(\"foo is now :\", foo);\n```\n\nNow run this program with `node test.js` :\n\n```\nHello world !\nfoo is : bar\n> foo          <-- here the REPL open. I type \"foo\"\nbar            <-- and get its value : I have access to program scope variables !\n> foo=\"baz\"    <-- I now manually override foo\nbaz\n> quit         <-- and exit the REPL\nfoo is now : baz  <-- foo did change in program scope !\n```\n",
  "homepage": "https://github.com/alidavut/locus",
  "_id": "locus@0.1.0",
  "_from": "locus@"
}
